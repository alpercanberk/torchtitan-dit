# torchtitan Config.toml

[job]
dump_folder = "./outputs"
description = "Llama 3 debug training"
use_for_integration_test = true

[profiling]
enable_profiling = false
save_traces_folder = "profile_trace"
profile_freq = 500
enable_memory_snapshot = false
save_memory_snapshot_folder = "memory_snapshot"

[metrics]
log_freq = 1
sample_freq = 100
sample_batch_size = 16
enable_color_printing = true
enable_tensorboard = true
save_tb_folder = "tb_new"
experiment_name = "dit"
enable_wandb = false
enable_sampling = false

[dataset]
batch_size = -1 # get it from training.batch_size
dataset_name = "imagenet_dummy"
root_dir = "/local/vondrick/alper/imagenet_ci8x8.safetensors" #local/vondrick/dataset/imagenet for pixels
num_workers = 8
image_size = [64, 64]
num_classes = 1000

[model]
name = "llama3_diffusion"
flavor = "DiT-L"
norm_type = "rmsnorm"  # layernorm / np_layernorm / rmsnorm / fused_rmsnorm
# test tokenizer.model, for debug purpose only
tokenizer_path = "./test/assets/test_tiktoken.model"
input_channels=16 #set this to 3 for pixel space
patch_size = 2

[optimizer]
name = "AdamW"
lr = 1e-4

[training]
batch_size = -1
seq_len = -1
warmup_steps = 0  # lr scheduler warm up, normally 20% of the train steps
max_norm = 1.0  # grad norm clipping
steps = 50
data_parallel_replicate_degree = 1
data_parallel_shard_degree = 1
tensor_parallel_degree = 1
compile = false
dataset = "c4_test"  # supported datasets: c4_test (2K), c4 (177M)

[experimental]
context_parallel_degree = 1
pipeline_parallel_degree = 1
enable_async_tensor_parallel = false

[checkpoint]
enable_checkpoint = false
folder = "checkpoint"
interval_type = "steps"
interval = 10
model_weights_only = false
export_dtype = "float32"
async_mode = "disabled"  # ["disabled", "async", "async_with_pinned_mem"]

[activation_checkpoint]
mode = 'selective'  # ['none', 'selective', 'full']
selective_ac_option = '2'  # 'int' = ac every positive int layer or 'op', ac based on ops policy

[float8]
enable_float8_linear = false
